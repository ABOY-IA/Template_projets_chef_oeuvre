services:
  app:
    build: .
    container_name: fastapi_app
    env_file:
      - .env
    ports:
      - "${API_PORT}:8000"
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime_kuma
    ports:
      - "3001:3001"
    volumes:
      - uptime-kuma-data:/app/data
    restart: unless-stopped

  prefect-server:
    image: prefecthq/prefect:2-python3.12
    command: prefect server start --host 0.0.0.0
    container_name: prefect-server
    env_file:
      - .env
    ports:
      - "4200:4200"
    volumes:
      - prefect_data:/root/.prefect
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: ${PREFECT_API_DATABASE_CONNECTION_URL}
    healthcheck:
      test:
        - CMD-SHELL
        - >
          bash -c "exec 3<>/dev/tcp/127.0.0.1/4200; echo -e 'GET / HTTP/1.1\r\nhost: localhost\r\nConnection: close\r\n\r\n' >&3; grep 'HTTP/1.1 200 OK' <&3"
      interval: 5s
      timeout: 10s
      retries: 20

  prefect-worker:
    image: prefecthq/prefect:2-python3.12
    container_name: prefect-worker
    env_file:
      - .env
    environment:
      EXTRA_PIP_PACKAGES: "-r /home/karn1zc/Simplon/Template_projets_chef_oeuvre/requirements.txt"
      PYTHONPATH: /home/karn1zc/Simplon/Template_projets_chef_oeuvre/app
    command: prefect worker start --pool "${PREFECT_WORK_POOL}"
    depends_on:
      prefect-server:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./:/home/karn1zc/Simplon/Template_projets_chef_oeuvre

  postgres:
    image: postgres:15
    container_name: prefect-postgres
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - prefect-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.1
    container_name: mlflow
    env_file:
      - .env
    ports:
      - "${MLFLOW_PORT}:5000"
    environment:
      MLFLOW_ARTIFACT_ROOT: ${MLFLOW_ARTIFACT_ROOT}
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
    volumes:
      - ./mlruns:${MLFLOW_ARTIFACT_ROOT}
      - ./mlflow_data:/mlflow_data
    restart: unless-stopped
    command: mlflow server --host 0.0.0.0 --port 5000

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana

volumes:
  uptime-kuma-data:
  prefect_data:
  prefect-postgres-data:
  grafana_data:
